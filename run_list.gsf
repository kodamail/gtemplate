*
* Run list for template GrADS script
*
*
* run_list(
*   runid, varid[, [ -cdir ] cdir ] [-show-dir]
* )
*
* -show-dor is used in cnf_isccp_matrix.gsf. Is it really necessary?
*
function run_list( args )
*
*----- arguments
*
  runid = ''
  varid = ''
  cdir = ''
  flag_show_dir = 0
  i = 1
  while( i < 1000 )
    flag = 0
    key = subwrd( args, i ) ; i = i + 1
    if( key = '' ) ; break ; endif
    if( flag = 0 & key = '-cdir' )
      flag = 1 ; cdir = subwrd( args, i ) ; i = i + 1
    endif
    if( flag = 0 & key = '-show-dir' )
      flag = 1 ; flag_show_dir = 1
    endif 
    if( flag = 0 & runid = '' )
      flag = 1 ; runid = key
    endif
    if( flag = 0 & varid = '' )
      flag = 1 ;  varid = key
    endif
    if( flag = 0 & cdir = '' )
      flag = 1 ; cdir = key
    endif
  endwhile
*
*-----
*
  rc = gsfpath( 'run_list' )
  run  = ''
  var  = ''
  vary = ''
  varz = ''
*
*-----
*
* varid -> varid_base, varid_lev (e.g., 'u500' -> 'u', '500', 't2m' -> 't2m', '')
  tmp = varid_sep( varid )
  varid_base = subwrd( tmp, 1 )
  varid_lev  = subwrd( tmp, 2 )
*
* rl_* returns run name and variable expression if possible.
*
  while ( 1 = 1 )

    tmp = rl_afes( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_ceres( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_cmap( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_era( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_gpcp( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_isccp_obs( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_jra25( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_jra55( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_miroc( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_misc( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_modis( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_ncep( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_nicam_v1( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_nicam_v2( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_nicam_v3( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_oisst( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_sintex( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_trmm( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    tmp = rl_srb( runid, varid_base, varid_lev, cdir, flag_show_dir )
    if ( subwrd( tmp, 1 ) != '' ) ; break ; endif

    break
  endwhile

  if( tmp != '' )
    if( flag_show_dir = 1 ) ; return tmp ; endif
    run = subwrd( tmp, 1 )
    var = subwrd( tmp, 2 )
    vary = subwrd( tmp, 3 )
    varz = subwrd( tmp, 4 )
  endif

  ret = ''
  if( run  != '' ) ; ret = ret % '-run '  % run % ' ' ; endif
  if( var  != '' ) ; ret = ret % '-var '  % var % ' ' ; endif
  if( vary != '' ) ; ret = ret % '-vary ' % vary % ' ' ; endif
  if( varz != '' ) ; ret = ret % '-varz ' % varz % ' ' ; endif
return ret


* cmd: open command (if necessary)
function dtopen( dir, tail, cmd, error )
  ret = read( dir'/'tail  )
  stat = sublin( ret, 1 )
  if( stat = 0 )
    fv_pre = last()

    if( cmd = 'cmd' | cmd = '' )
      'xopen 'dir'/'tail
    else
      cmd' 'dir'/'tail
    endif
    fv = last()
    if( fv = fv_pre )
      fv = -1
    else
      say 'open #' % fv % ': ' % dir % '/' % tail
    endif
  else
    fv = -1
  endif

  if( error != 0 & fv < 0 )
    say 'error: fail to open ' % dir % '/' % tail
    exit
  endif
  if( fv < 0 )
    say 'info: fail to open ' % dir % '/' % tail
  endif
return fv


function varid_sep( varid )
  target.1 = 'u'
  target.2 = 'v'
  target.3 = 't'
  target.4 = 'rh'
  target.5 = 'qv'
  target.6 = 'land_wg'
  tarmax = 6

  varid_base = varid
  varid_lev = ''

  tar = 1
  while( tar <= tarmax )
    target_len = math_strlen(target.tar)
    tmp1 = substr(varid,1,target_len)
    tmp2 = math_strlen(varid)
    if( tmp1 = target.tar & tmp2 > target_len )
      varid_lev_tmp = substr(varid,target_len+1,tmp2-target_len)
      if( valnum( varid_lev_tmp ) != 0 )
        varid_base = tmp1
        varid_lev = varid_lev_tmp
      endif
    endif
    tar = tar + 1
  endwhile
return varid_base' 'varid_lev
